
package dropnumber;

import java.awt.Color;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

// https://www.mathplayground.com/logic_drop_the_number.html

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

// MVC Design Pattern - View and Controller (User Actions)
public class GameForm extends javax.swing.JFrame {
    //butonul are 3 stari
    private enum ButtonState { STOPPED, RUNNING, PAUSED }
    
    //culoarea de fond
    private static final Color bkColor = new Color(47, 47, 47); 
    private static GameForm sGameForm = null;
    
    //initial jocul este oprit
    private ButtonState buttonState = ButtonState.STOPPED;
    private Icon pauseIcon;
    private Icon startIcon;
    
    public GameForm() {
        initComponents();
        this.getContentPane().setBackground(bkColor);
        // centered on screen
        setLocationRelativeTo(null);
        pauseIcon = new ImageIcon("pause.png");
        startIcon = new ImageIcon("start.png");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlBoard = new PanelBoard();
        lblScore = new javax.swing.JLabel();
        lblBest = new javax.swing.JLabel();
        pnlPickColumn = new PanelPickColumn();
        lblNextBlock = new javax.swing.JLabel();
        btnStart = new javax.swing.JButton();
        btnSize = new javax.swing.JButton();
        btnRestart = new javax.swing.JButton();
        pnlNext = new PanelNext();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Drop the Number");
        setAlwaysOnTop(true);
        setBackground(new java.awt.Color(47, 47, 47));
        setName("frmGame"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        pnlBoard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlBoard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlBoardMousePressed(evt);
            }
        });

        javax.swing.GroupLayout pnlBoardLayout = new javax.swing.GroupLayout(pnlBoard);
        pnlBoard.setLayout(pnlBoardLayout);
        pnlBoardLayout.setHorizontalGroup(
            pnlBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        pnlBoardLayout.setVerticalGroup(
            pnlBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 442, Short.MAX_VALUE)
        );

        lblScore.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblScore.setForeground(new java.awt.Color(255, 255, 255));
        lblScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblScore.setText("<html>Score<br>0</html>");

        lblBest.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblBest.setForeground(new java.awt.Color(255, 255, 255));
        lblBest.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblBest.setText("<html>Best<br>0</html>");

        pnlPickColumn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlPickColumn.setName(""); // NOI18N
        pnlPickColumn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlPickColumnMousePressed(evt);
            }
        });

        javax.swing.GroupLayout pnlPickColumnLayout = new javax.swing.GroupLayout(pnlPickColumn);
        pnlPickColumn.setLayout(pnlPickColumnLayout);
        pnlPickColumnLayout.setHorizontalGroup(
            pnlPickColumnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        pnlPickColumnLayout.setVerticalGroup(
            pnlPickColumnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        lblNextBlock.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblNextBlock.setForeground(new java.awt.Color(255, 255, 255));
        lblNextBlock.setText("Next Block");

        btnStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dropnumber/start.png"))); // NOI18N
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });

        btnSize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dropnumber/sound.png"))); // NOI18N

        btnRestart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dropnumber/restart.png"))); // NOI18N
        btnRestart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartActionPerformed(evt);
            }
        });

        pnlNext.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlNext.setPreferredSize(new java.awt.Dimension(80, 74));

        javax.swing.GroupLayout pnlNextLayout = new javax.swing.GroupLayout(pnlNext);
        pnlNext.setLayout(pnlNextLayout);
        pnlNextLayout.setHorizontalGroup(
            pnlNextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 78, Short.MAX_VALUE)
        );
        pnlNextLayout.setVerticalGroup(
            pnlNextLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 76, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblBest, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblNextBlock)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(lblScore, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(94, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlPickColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(86, 86, 86)
                            .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(76, 76, 76)
                            .addComponent(btnSize, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(73, 73, 73)
                            .addComponent(btnRestart, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            .addComponent(pnlBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblScore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(lblNextBlock)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(pnlNext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlPickColumn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnlBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRestart, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStart, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSize, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        if (buttonState == ButtonState.STOPPED) {
            //daca jocul e oprit atunci se porneste
            DropNumber dn = DropNumber.getInstance();
            Controller cntrl = Controller.getInstance();
            dn.resetBoard();
            dn.setScore(0);
            cntrl.resetHistoryValues();
            this.setScore(0);
            buttonState = ButtonState.RUNNING;
            btnStart.setIcon(pauseIcon); //se schimba iconita
            cntrl.startGame();          //porneste jocul in controlor
        }
        else if (buttonState == ButtonState.RUNNING) {
            //daca jocul e pornit, trece pe pauza
            buttonState = ButtonState.PAUSED;
            btnStart.setIcon(startIcon);
            Controller.getInstance().pauseGame();   //intra in pauza in controlor
        }
        else if (buttonState == ButtonState.PAUSED) {
            //revine din pauza
            buttonState = ButtonState.RUNNING;
            btnStart.setIcon(pauseIcon);
            Controller.getInstance().runGame();
        }
    }//GEN-LAST:event_btnStartActionPerformed

    private void btnRestartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartActionPerformed
        if (buttonState == ButtonState.RUNNING || buttonState == ButtonState.PAUSED) {
            //reseteaza jocul
            DropNumber dn = DropNumber.getInstance();
            Controller cntrl = Controller.getInstance();
            dn.resetBoard();
            dn.setScore(0);
            cntrl.resetHistoryValues();
            this.setScore(0);
            buttonState = ButtonState.RUNNING;
            btnStart.setIcon(pauseIcon);
            cntrl.startGame();
        }
    }//GEN-LAST:event_btnRestartActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        sGameForm = this;
        setBestScore(DropNumber.getInstance().getBestScore());
    }//GEN-LAST:event_formWindowActivated

    private void pnlBoardMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlBoardMousePressed
        if (ActiveMarble.getInstance().fastDrop(evt.getX()))
            //actiunea de redesenare imediata
            Controller.getInstance().timerAction();
    }//GEN-LAST:event_pnlBoardMousePressed

    private void pnlPickColumnMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlPickColumnMousePressed
        if (ActiveMarble.getInstance().fastDrop(evt.getX()))
            //actiunea de redesenare imediata
            Controller.getInstance().timerAction();
    }//GEN-LAST:event_pnlPickColumnMousePressed

    public static GameForm getActiveGameForm() {
        return sGameForm;
    }

    public void stopGame() {
        //opreste jocul, e apelat din controlor
        btnStart.setIcon(startIcon);
        buttonState = ButtonState.STOPPED;
        JOptionPane.showMessageDialog(this, "Game Over!", "GAME OVER",
                JOptionPane.INFORMATION_MESSAGE);
    }
    
    // obtine controlul Panel pentru tabla.
    // este apelat din controlor.
    public PanelBoard getPanelBoard() {
        return (PanelBoard)pnlBoard;
    }
    
    // obtine controlul Panel pentru piesa urmatoare
    // este apelat din controlor.
    public PanelNext getPanelNext() {
        return (PanelNext)pnlNext;
    }
    
    // modifica scorul curent afisat
    public void setScore(int score) {
        lblScore.setText("<html>Score<br>" + score + "</html>");
    }
    
    // modifica scorul cel mai bun(bestscore) afisat
    public void setBestScore(int bestScore) {
        lblBest.setText("<html>Best<br>" + bestScore + "</html>");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRestart;
    private javax.swing.JButton btnSize;
    private javax.swing.JButton btnStart;
    private javax.swing.JLabel lblBest;
    private javax.swing.JLabel lblNextBlock;
    private javax.swing.JLabel lblScore;
    private javax.swing.JPanel pnlBoard;
    private javax.swing.JPanel pnlNext;
    private javax.swing.JPanel pnlPickColumn;
    // End of variables declaration//GEN-END:variables
}

